// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteComponent component handlers handleNavigateToNote should call method 1`] = `
<NoteComponent
  addOrUpdateNote={[Function]}
  addSelectedNote={[Function]}
  navigateToPage={[Function]}
  note={
    Object {
      "created_at": 1632734670806,
      "id": "b83cbac2-d74e-458d-85c0-75bdf9c29ba3",
      "text": "An army, ground force, or land force is a fighting force that fights primarily on land.",
      "title": "Army",
      "updated_at": 1632735522467,
    }
  }
  removeUnselectedNote={[Function]}
  selectedNotes={
    Array [
      "b83cbac2-d74e-458d-85c0-75bdf9c29ba3",
    ]
  }
>
  <styled.li>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ifAKCX",
            "isStatic": false,
            "lastClassName": "hOtgka",
            "rules": Array [
              "
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 0 15px 0;
    width: 100%;
",
            ],
          },
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ifAKCX",
          "target": "li",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <li
        className="sc-ifAKCX hOtgka"
      >
        <styled.div
          onClick={[Function]}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "bWQfos",
                  "rules": Array [
                    "
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    list-style-type: none;
    background: ",
                    "#FFFFFF",
                    ";
    box-shadow: inset 0px 0px 20px rgba(0, 0, 0, 0.25);
    border-radius: 20px;
    padding: 15px 20px;
    margin: 0 15px 0 0;
    min-width: calc(100% - 70px);
    &:hover {
        cursor: pointer;
    }
",
                  ],
                },
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onClick={[Function]}
          >
            <div
              className="sc-EHOje bWQfos"
              onClick={[Function]}
            >
              <styled.h3>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "fuJsPI",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 24px;
    line-height: 31px;
    margin: 0 0 5px 0;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "h3",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h3
                    className="sc-bZQynM fuJsPI"
                  >
                    Army
                  </h3>
                </StyledComponent>
              </styled.h3>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gzVnrw",
                        "isStatic": false,
                        "lastClassName": "kQFZuP",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 14px;
    line-height: 18px;
    margin: 0 0 10px 0;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";;
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gzVnrw",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-gzVnrw kQFZuP"
                  >
                    An army, ground force, or land force is a fighting force that fights primarily on land.
                  </p>
                </StyledComponent>
              </styled.p>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "bgniKV",
                        "rules": Array [
                          "
    background-color: ",
                          "#000000",
                          ";
    height: 1px;
    width: 100%;
    margin: 0 0 10px 0;
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-htoDjs bgniKV"
                  />
                </StyledComponent>
              </styled.div>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "fFbPdu",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 10px;
    line-height: 13px;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-dnqmqq fFbPdu"
                  >
                    Created: 
                    27.09.2021 12:24:30
                  </p>
                </StyledComponent>
              </styled.p>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "fFbPdu",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 10px;
    line-height: 13px;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-dnqmqq fFbPdu"
                  >
                    Modified: 
                    27.09.2021 12:38:42
                  </p>
                </StyledComponent>
              </styled.p>
            </div>
          </StyledComponent>
        </styled.div>
        <Checkbox
          checked={true}
          onChange={[Function]}
        >
          <styled.label>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "GkBXx",
                    "rules": Array [
                      "
    display: inline-block;
    vertical-align: middle;
    &:hover {
        cursor: pointer;
    }
",
                    ],
                  },
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <label
                className="sc-bdVaJa GkBXx"
              >
                <styled.input
                  checked={true}
                  onChange={[Function]}
                >
                  <StyledComponent
                    checked={true}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          Object {
                            "type": "checkbox",
                          },
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "hJwuQC",
                          "rules": Array [
                            "
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
",
                          ],
                        },
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onChange={[Function]}
                  >
                    <input
                      checked={true}
                      className="sc-htpNat hJwuQC"
                      onChange={[Function]}
                      type="checkbox"
                    />
                  </StyledComponent>
                </styled.input>
                <styled.div
                  checked={true}
                >
                  <StyledComponent
                    checked={true}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bxivhb",
                          "isStatic": false,
                          "lastClassName": "eyuFwS",
                          "rules": Array [
                            "
    display: flex;
    justify-content: center;
    align-items: center;
    width: 55px;
    height: 55px;
    background: ",
                            "#FFFFFF",
                            ";
    border-radius: 15px;
    border: 4px solid ",
                            "#0047FF",
                            ";

    ",
                            ".sc-bwzfXH",
                            " {
        visibility: ",
                            [Function],
                            ";
    }
",
                          ],
                        },
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bxivhb",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      checked={true}
                      className="sc-bxivhb eyuFwS"
                    >
                      <styled.img
                        src="test-file-stub"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "dFPsPe",
                                "rules": Array [
                                  "
    width: 32px;
    height: 24px;
    fill: none;
",
                                ],
                              },
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "img",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          src="test-file-stub"
                        >
                          <img
                            className="sc-bwzfXH dFPsPe"
                            src="test-file-stub"
                          />
                        </StyledComponent>
                      </styled.img>
                    </div>
                  </StyledComponent>
                </styled.div>
              </label>
            </StyledComponent>
          </styled.label>
        </Checkbox>
      </li>
    </StyledComponent>
  </styled.li>
</NoteComponent>
`;

exports[`NoteComponent component handlers handleSelectOrUnselectNote add selected note 1`] = `
<NoteComponent
  addOrUpdateNote={[Function]}
  addSelectedNote={[Function]}
  navigateToPage={[Function]}
  note={
    Object {
      "created_at": 1632734670806,
      "id": "b83cbac2-d74e-458d-85c0-75bdf9c29ba3",
      "text": "An army, ground force, or land force is a fighting force that fights primarily on land.",
      "title": "Army",
      "updated_at": 1632735522467,
    }
  }
  removeUnselectedNote={[Function]}
  selectedNotes={Array []}
>
  <styled.li>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ifAKCX",
            "isStatic": false,
            "lastClassName": "hOtgka",
            "rules": Array [
              "
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 0 15px 0;
    width: 100%;
",
            ],
          },
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ifAKCX",
          "target": "li",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <li
        className="sc-ifAKCX hOtgka"
      >
        <styled.div
          onClick={[Function]}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "bWQfos",
                  "rules": Array [
                    "
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    list-style-type: none;
    background: ",
                    "#FFFFFF",
                    ";
    box-shadow: inset 0px 0px 20px rgba(0, 0, 0, 0.25);
    border-radius: 20px;
    padding: 15px 20px;
    margin: 0 15px 0 0;
    min-width: calc(100% - 70px);
    &:hover {
        cursor: pointer;
    }
",
                  ],
                },
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onClick={[Function]}
          >
            <div
              className="sc-EHOje bWQfos"
              onClick={[Function]}
            >
              <styled.h3>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "fuJsPI",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 24px;
    line-height: 31px;
    margin: 0 0 5px 0;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "h3",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h3
                    className="sc-bZQynM fuJsPI"
                  >
                    Army
                  </h3>
                </StyledComponent>
              </styled.h3>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gzVnrw",
                        "isStatic": false,
                        "lastClassName": "kQFZuP",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 14px;
    line-height: 18px;
    margin: 0 0 10px 0;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";;
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gzVnrw",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-gzVnrw kQFZuP"
                  >
                    An army, ground force, or land force is a fighting force that fights primarily on land.
                  </p>
                </StyledComponent>
              </styled.p>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "bgniKV",
                        "rules": Array [
                          "
    background-color: ",
                          "#000000",
                          ";
    height: 1px;
    width: 100%;
    margin: 0 0 10px 0;
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-htoDjs bgniKV"
                  />
                </StyledComponent>
              </styled.div>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "fFbPdu",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 10px;
    line-height: 13px;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-dnqmqq fFbPdu"
                  >
                    Created: 
                    27.09.2021 12:24:30
                  </p>
                </StyledComponent>
              </styled.p>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "fFbPdu",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 10px;
    line-height: 13px;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-dnqmqq fFbPdu"
                  >
                    Modified: 
                    27.09.2021 12:38:42
                  </p>
                </StyledComponent>
              </styled.p>
            </div>
          </StyledComponent>
        </styled.div>
        <Checkbox
          checked={false}
          onChange={[Function]}
        >
          <styled.label>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "GkBXx",
                    "rules": Array [
                      "
    display: inline-block;
    vertical-align: middle;
    &:hover {
        cursor: pointer;
    }
",
                    ],
                  },
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <label
                className="sc-bdVaJa GkBXx"
              >
                <styled.input
                  checked={false}
                  onChange={[Function]}
                >
                  <StyledComponent
                    checked={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          Object {
                            "type": "checkbox",
                          },
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "hJwuQC",
                          "rules": Array [
                            "
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
",
                          ],
                        },
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onChange={[Function]}
                  >
                    <input
                      checked={false}
                      className="sc-htpNat hJwuQC"
                      onChange={[Function]}
                      type="checkbox"
                    />
                  </StyledComponent>
                </styled.input>
                <styled.div
                  checked={false}
                >
                  <StyledComponent
                    checked={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bxivhb",
                          "isStatic": false,
                          "lastClassName": "vwYgG",
                          "rules": Array [
                            "
    display: flex;
    justify-content: center;
    align-items: center;
    width: 55px;
    height: 55px;
    background: ",
                            "#FFFFFF",
                            ";
    border-radius: 15px;
    border: 4px solid ",
                            "#0047FF",
                            ";

    ",
                            ".sc-bwzfXH",
                            " {
        visibility: ",
                            [Function],
                            ";
    }
",
                          ],
                        },
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bxivhb",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      checked={false}
                      className="sc-bxivhb vwYgG"
                    >
                      <styled.img
                        src="test-file-stub"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "dFPsPe",
                                "rules": Array [
                                  "
    width: 32px;
    height: 24px;
    fill: none;
",
                                ],
                              },
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "img",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          src="test-file-stub"
                        >
                          <img
                            className="sc-bwzfXH dFPsPe"
                            src="test-file-stub"
                          />
                        </StyledComponent>
                      </styled.img>
                    </div>
                  </StyledComponent>
                </styled.div>
              </label>
            </StyledComponent>
          </styled.label>
        </Checkbox>
      </li>
    </StyledComponent>
  </styled.li>
</NoteComponent>
`;

exports[`NoteComponent component handlers handleSelectOrUnselectNote remove unselected note 1`] = `
<NoteComponent
  addOrUpdateNote={[Function]}
  addSelectedNote={[Function]}
  navigateToPage={[Function]}
  note={
    Object {
      "created_at": 1632734670806,
      "id": "b83cbac2-d74e-458d-85c0-75bdf9c29ba3",
      "text": "An army, ground force, or land force is a fighting force that fights primarily on land.",
      "title": "Army",
      "updated_at": 1632735522467,
    }
  }
  removeUnselectedNote={[Function]}
  selectedNotes={
    Array [
      "b83cbac2-d74e-458d-85c0-75bdf9c29ba3",
    ]
  }
>
  <styled.li>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-ifAKCX",
            "isStatic": false,
            "lastClassName": "hOtgka",
            "rules": Array [
              "
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 0 15px 0;
    width: 100%;
",
            ],
          },
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-ifAKCX",
          "target": "li",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <li
        className="sc-ifAKCX hOtgka"
      >
        <styled.div
          onClick={[Function]}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "bWQfos",
                  "rules": Array [
                    "
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    list-style-type: none;
    background: ",
                    "#FFFFFF",
                    ";
    box-shadow: inset 0px 0px 20px rgba(0, 0, 0, 0.25);
    border-radius: 20px;
    padding: 15px 20px;
    margin: 0 15px 0 0;
    min-width: calc(100% - 70px);
    &:hover {
        cursor: pointer;
    }
",
                  ],
                },
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onClick={[Function]}
          >
            <div
              className="sc-EHOje bWQfos"
              onClick={[Function]}
            >
              <styled.h3>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "fuJsPI",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 24px;
    line-height: 31px;
    margin: 0 0 5px 0;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "h3",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h3
                    className="sc-bZQynM fuJsPI"
                  >
                    Army
                  </h3>
                </StyledComponent>
              </styled.h3>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gzVnrw",
                        "isStatic": false,
                        "lastClassName": "kQFZuP",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 14px;
    line-height: 18px;
    margin: 0 0 10px 0;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";;
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gzVnrw",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-gzVnrw kQFZuP"
                  >
                    An army, ground force, or land force is a fighting force that fights primarily on land.
                  </p>
                </StyledComponent>
              </styled.p>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "bgniKV",
                        "rules": Array [
                          "
    background-color: ",
                          "#000000",
                          ";
    height: 1px;
    width: 100%;
    margin: 0 0 10px 0;
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-htoDjs bgniKV"
                  />
                </StyledComponent>
              </styled.div>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "fFbPdu",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 10px;
    line-height: 13px;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-dnqmqq fFbPdu"
                  >
                    Created: 
                    27.09.2021 12:24:30
                  </p>
                </StyledComponent>
              </styled.p>
              <styled.p>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "fFbPdu",
                        "rules": Array [
                          "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-style: normal;
    font-weight: bold;
    font-size: 10px;
    line-height: 13px;
    width: auto;
    color: ",
                          "#5A5A5A",
                          ";
",
                        ],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "p",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <p
                    className="sc-dnqmqq fFbPdu"
                  >
                    Modified: 
                    27.09.2021 12:38:42
                  </p>
                </StyledComponent>
              </styled.p>
            </div>
          </StyledComponent>
        </styled.div>
        <Checkbox
          checked={true}
          onChange={[Function]}
        >
          <styled.label>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "GkBXx",
                    "rules": Array [
                      "
    display: inline-block;
    vertical-align: middle;
    &:hover {
        cursor: pointer;
    }
",
                    ],
                  },
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <label
                className="sc-bdVaJa GkBXx"
              >
                <styled.input
                  checked={true}
                  onChange={[Function]}
                >
                  <StyledComponent
                    checked={true}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          Object {
                            "type": "checkbox",
                          },
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "hJwuQC",
                          "rules": Array [
                            "
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
",
                          ],
                        },
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onChange={[Function]}
                  >
                    <input
                      checked={true}
                      className="sc-htpNat hJwuQC"
                      onChange={[Function]}
                      type="checkbox"
                    />
                  </StyledComponent>
                </styled.input>
                <styled.div
                  checked={true}
                >
                  <StyledComponent
                    checked={true}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bxivhb",
                          "isStatic": false,
                          "lastClassName": "eyuFwS",
                          "rules": Array [
                            "
    display: flex;
    justify-content: center;
    align-items: center;
    width: 55px;
    height: 55px;
    background: ",
                            "#FFFFFF",
                            ";
    border-radius: 15px;
    border: 4px solid ",
                            "#0047FF",
                            ";

    ",
                            ".sc-bwzfXH",
                            " {
        visibility: ",
                            [Function],
                            ";
    }
",
                          ],
                        },
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bxivhb",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      checked={true}
                      className="sc-bxivhb eyuFwS"
                    >
                      <styled.img
                        src="test-file-stub"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "dFPsPe",
                                "rules": Array [
                                  "
    width: 32px;
    height: 24px;
    fill: none;
",
                                ],
                              },
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "img",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          src="test-file-stub"
                        >
                          <img
                            className="sc-bwzfXH dFPsPe"
                            src="test-file-stub"
                          />
                        </StyledComponent>
                      </styled.img>
                    </div>
                  </StyledComponent>
                </styled.div>
              </label>
            </StyledComponent>
          </styled.label>
        </Checkbox>
      </li>
    </StyledComponent>
  </styled.li>
</NoteComponent>
`;

exports[`NoteComponent component should render NoteComponent component 1`] = `
<styled.li>
  <styled.div
    onClick={[Function]}
  >
    <styled.h3>
      Army
    </styled.h3>
    <styled.p>
      An army, ground force, or land force is a fighting force that fights primarily on land.
    </styled.p>
    <styled.div />
    <styled.p>
      Created: 
      27.09.2021 12:24:30
    </styled.p>
    <styled.p>
      Modified: 
      27.09.2021 12:38:42
    </styled.p>
  </styled.div>
  <Checkbox
    checked={true}
    onChange={[Function]}
  />
</styled.li>
`;
