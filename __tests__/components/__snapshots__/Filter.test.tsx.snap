// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Filter component handlers handleChangeFilter change filterType 1`] = `
<Filter
  fetchNotes={[Function]}
  filterAction={[Function]}
  filterType="title"
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "kzLIph",
            "rules": Array [
              "
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    @media (max-width: 500px) {
	    flex-direction: column;
        align-items: center;
        width: 100%;
    }
",
            ],
          },
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa kzLIph"
      >
        <styled.h2>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "fihYRI",
                  "rules": Array [
                    "
    font-style: normal;
    font-weight: bold;
    font-size: 18px;
    line-height: 24px;
    margin: 0 15px 0 0;
    color: ",
                    "#5A5A5A",
                    ";
    @media (max-width: 500px) {
        margin: 0 0 10px 0;
    }
",
                  ],
                },
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "h2",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <h2
              className="sc-bwzfXH fihYRI"
            >
              Sort by:
            </h2>
          </StyledComponent>
        </styled.h2>
        <styled.select
          onChange={[Function]}
          value="title"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "jrJndS",
                  "rules": Array [
                    "
    font-family: inherit;
    font-style: normal;
    font-weight: bold;
    font-size: 18px;
    line-height: 24px;
    color: ",
                    "#5A5A5A",
                    ";
    background-color: ",
                    "#FFFFFF",
                    ";
    border: 4px solid ",
                    "#5A5A5A",
                    ";
    border-radius: 15px;
    padding: 10px 5px 10px 5px;
    cursor: pointer;
    @media (max-width: 500px) {
        flex-direction: column;
    }
",
                  ],
                },
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "select",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onChange={[Function]}
            value="title"
          >
            <select
              className="sc-htpNat jrJndS"
              onChange={[Function]}
              value="title"
            >
              <styled.option
                value="title"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": false,
                        "lastClassName": "bUZGRr",
                        "rules": Array [],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "option",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  value="title"
                >
                  <option
                    className="sc-bxivhb bUZGRr"
                    value="title"
                  >
                    Name
                  </option>
                </StyledComponent>
              </styled.option>
              <styled.option
                value="created_at"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": false,
                        "lastClassName": "bUZGRr",
                        "rules": Array [],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "option",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  value="created_at"
                >
                  <option
                    className="sc-bxivhb bUZGRr"
                    value="created_at"
                  >
                    Date Created
                  </option>
                </StyledComponent>
              </styled.option>
              <styled.option
                value="updated_at"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": false,
                        "lastClassName": "bUZGRr",
                        "rules": Array [],
                      },
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "option",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  value="updated_at"
                >
                  <option
                    className="sc-bxivhb bUZGRr"
                    value="updated_at"
                  >
                    Date Modified
                  </option>
                </StyledComponent>
              </styled.option>
            </select>
          </StyledComponent>
        </styled.select>
      </div>
    </StyledComponent>
  </styled.div>
</Filter>
`;

exports[`Filter component should render Filter component 1`] = `
<styled.div>
  <styled.h2>
    Sort by:
  </styled.h2>
  <styled.select
    onChange={[Function]}
    value="title"
  >
    <styled.option
      value="title"
    >
      Name
    </styled.option>
    <styled.option
      value="created_at"
    >
      Date Created
    </styled.option>
    <styled.option
      value="updated_at"
    >
      Date Modified
    </styled.option>
  </styled.select>
</styled.div>
`;
